/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.95
 * Generated at: 2024-12-19 05:27:26 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.cafe;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class cafemap_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(5);
    _jspx_dependants.put("/WEB-INF/views/inc/dev.jsp", Long.valueOf(1734585912354L));
    _jspx_dependants.put("/WEB-INF/views/inc/footer.jsp", Long.valueOf(1733983260711L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1729240665271L));
    _jspx_dependants.put("/WEB-INF/views/inc/nav.jsp", Long.valueOf(1733918060466L));
    _jspx_dependants.put("jar:file:/C:/Users/LG/Desktop/zajinmori/project/JSPServletProject/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/CafeSeatProject/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fif_0026_005ftest;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.release();
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE HTML>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<title>CafeSeat</title>\r\n");
      out.write("<meta charset=\"utf-8\" />\r\n");
      out.write("<meta name=\"viewport\"\r\n");
      out.write("	content=\"width=device-width, initial-scale=1, user-scalable=no\" />\r\n");
      out.write("<link\r\n");
      out.write("	href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\"\r\n");
      out.write("	rel=\"stylesheet\"\r\n");
      out.write("	integrity=\"sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH\"\r\n");
      out.write("	crossorigin=\"anonymous\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"../assets/css/main.css\" />\r\n");
      out.write("<link rel=\"stylesheet\" href=\"../assets/css/map.css\" />\r\n");
      out.write("<!-- <noscript><link rel=\"stylesheet\" href=\"../assets/css/noscript.css\" /></noscript> -->\r\n");
      out.write("<script src=\"https://kit.fontawesome.com/1ddf83a78d.js\"\r\n");
      out.write("	crossorigin=\"anonymous\"></script>\r\n");
      out.write("</head>\r\n");
      out.write("<style>\r\n");
      out.write("@import url(\"/cafe/assets/css/paperlogy_font.css\");\r\n");
      out.write("\r\n");
      out.write("body {\r\n");
      out.write("	font-family: 'Paperlogy-8ExtraBold';\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("<body class=\"is-preload\">\r\n");
      out.write("\r\n");
      out.write("	");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<link rel=\"stylesheet\" href=\"../assets/css/dev.css\" />\r\n");
      out.write("<header>\r\n");
      out.write("	<div style=\"position: sticky; top: 0;\">\r\n");
      out.write("		<table>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<th>이름</th>\r\n");
      out.write("					<th>번호</th>\r\n");
      out.write("					<th>메일</th>\r\n");
      out.write("					<th>상태</th>\r\n");
      out.write("					<th>인증</th>\r\n");
      out.write("					<th>권한</th>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<td>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${info.name}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</td>\r\n");
      out.write("					<td>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${info.tel}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</td>\r\n");
      out.write("					<td>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${info.email}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</td>\r\n");
      out.write("					<td>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${info.ing}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</td>\r\n");
      out.write("					<td>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${auth}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</td>\r\n");
      out.write("					<td>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginType}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("		</table>\r\n");
      out.write("	</div> \r\n");
      out.write("</header>");
      out.write("\r\n");
      out.write("	<!-- Wrapper-->\r\n");
      out.write("	<div id=\"wrapper\">\r\n");
      out.write("\r\n");
      out.write("		<!-- Nav -->\r\n");
      out.write("		");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<nav id=\"nav\"\r\n");
      out.write("	style=\"display: flex; align-items: center; justify-content: space-between;\">\r\n");
      out.write("	<div class=\"logo\" style=\"margin-right: 850px;\">\r\n");
      out.write("		<a href=\"/cafe/cafe/cafemap.do\" style=\"opacity: 1;\"> <img src=\"../images/Logo.png\"\r\n");
      out.write("			style=\"width: 350px; height: 100px;\" alt=\"Logo\">\r\n");
      out.write("		</a>\r\n");
      out.write("	</div>\r\n");
      out.write("	<div style=\"flex: 1; display: flex; justify-content: center;\">\r\n");
      out.write("		<a href=\"/cafe/cafe/cafemap.do\" class=\"icon solid fa-map\"><span>Map</span></a>\r\n");
      out.write("		<!-- <a href=\"/cafe/seat/selectseat.do\" class=\"icon solid fa-mug-hot\"><span>CafeSeat</span></a>  -->\r\n");
      out.write("		<a href=\"/cafe/mypage/mypage.do\" class=\"icon solid fa-heart\"><span>MyPage</span></a>\r\n");
      out.write("\r\n");
      out.write("		<!-- 로그인 안 했을 때 -->\r\n");
      out.write("		");
      if (_jspx_meth_c_005fif_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\r\n");
      out.write("		<!-- 로그인 했을 때  -->\r\n");
      out.write("		");
      if (_jspx_meth_c_005fif_005f1(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("	</div>\r\n");
      out.write("</nav>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("		<!-- Main -->\r\n");
      out.write("		<div id=\"main\">\r\n");
      out.write("\r\n");
      out.write("			<!-- Me -->\r\n");
      out.write("			<article id=\"home\" class=\"panel intro\">\r\n");
      out.write("				<div class=\"map_wrap\">\r\n");
      out.write("					<div id=\"map\"></div>\r\n");
      out.write("\r\n");
      out.write("					<div id=\"menu_wrap\" class=\"bg_white\">\r\n");
      out.write("						<div class=\"option\">\r\n");
      out.write("							<div>\r\n");
      out.write("\r\n");
      out.write("								<form action=\"/cafe/cafemap.do\" method=\"GET\">\r\n");
      out.write("									<div id=\"search-box\">\r\n");
      out.write("										<input type=\"text\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${cseq}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" name=\"cseq\" id=\"cseq\"\r\n");
      out.write("											size=\"15\" placeholder=\"검색어를 입력하세요\">\r\n");
      out.write("										<button type=\"submit\" id=\"search-btn\">\r\n");
      out.write("											<i class=\"fa-solid fa-magnifying-glass\"></i>\r\n");
      out.write("										</button>\r\n");
      out.write("									</div>\r\n");
      out.write("								</form>\r\n");
      out.write("\r\n");
      out.write("							</div>\r\n");
      out.write("						</div>\r\n");
      out.write("						<hr>\r\n");
      out.write("						<ul id=\"placesList\">\r\n");
      out.write("							");
      if (_jspx_meth_c_005fforEach_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("						</ul>\r\n");
      out.write("						<div id=\"pagination\"></div>\r\n");
      out.write("					</div>\r\n");
      out.write("				</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("			</article>\r\n");
      out.write("\r\n");
      out.write("			<!-- CafeSeat -->\r\n");
      out.write("			<article id=\"cafeseat\" class=\"panel\"></article>\r\n");
      out.write("\r\n");
      out.write("			<!-- Mypage -->\r\n");
      out.write("			<article id=\"mypage\" class=\"panel\"></article>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("			<!-- Login -->\r\n");
      out.write("			<article id=\"login\" class=\"panel\"></article>\r\n");
      out.write("		</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("		<!-- Footer -->\r\n");
      out.write("		");
      out.write("\r\n");
      out.write("<div id=\"footer\">\r\n");
      out.write("	<ul class=\"copyright\">\r\n");
      out.write("		<li>&copy; SIST-SideProject</li>\r\n");
      out.write("		<li>MEMBER : 김유진 김유리 이우진 장지윤 전상수</li>\r\n");
      out.write("	</ul>\r\n");
      out.write("</div>");
      out.write("\r\n");
      out.write("\r\n");
      out.write("	</div>\r\n");
      out.write("\r\n");
      out.write("	<!-- Scripts -->\r\n");
      out.write("	<script src=\"../assets/js/jquery.min.js\"></script>\r\n");
      out.write("	<script src=\"../assets/js/browser.min.js\"></script>\r\n");
      out.write("	<script src=\"../assets/js/breakpoints.min.js\"></script>\r\n");
      out.write("	<script src=\"../assets/js/util.js\"></script>\r\n");
      out.write("	<script src=\"../assets/js/main.js\"></script>\r\n");
      out.write("	<script type=\"text/javascript\"\r\n");
      out.write("		src=\"https://dapi.kakao.com/v2/maps/sdk.js?appkey=ef00a9579c4de664a8dcf691494c9b70&libraries=services\"></script>\r\n");
      out.write("	<!-- <script src=\"../assets/js/cafe/map.js\"></script> -->\r\n");
      out.write("\r\n");
      out.write("	<script>\r\n");
      out.write("		var markers = []; // 마커를 저장할 배열\r\n");
      out.write("\r\n");
      out.write("		// 지도를 표시할 div와 지도 옵션으로 지도를 생성합니다\r\n");
      out.write("		var mapContainer = document.getElementById('map'), mapOption = {\r\n");
      out.write("			center : new kakao.maps.LatLng(37.499312, 127.033228), // 지도의 중심좌표\r\n");
      out.write("			level : 3\r\n");
      out.write("		// 지도의 확대 레벨\r\n");
      out.write("		};\r\n");
      out.write("\r\n");
      out.write("		var map = new kakao.maps.Map(mapContainer, mapOption); // 지도 생성\r\n");
      out.write("\r\n");
      out.write("		// 마커 이미지 설정\r\n");
      out.write("		var imageSrc = \"../images/location-pointer.png\"; // 마커 이미지 경로\r\n");
      out.write("		var imageSize = new kakao.maps.Size(36, 36); // 마커 이미지 크기\r\n");
      out.write("		var markerImage = new kakao.maps.MarkerImage(imageSrc, imageSize); // 마커 이미지 생성\r\n");
      out.write("\r\n");
      out.write("		// 인포윈도우 생성\r\n");
      out.write("		var infowindow = new kakao.maps.InfoWindow({\r\n");
      out.write("			zIndex : 1\r\n");
      out.write("		});\r\n");
      out.write("\r\n");
      out.write("		var cafeList = []; // 카페 데이터를 저장할 배열\r\n");
      out.write("\r\n");
      out.write("		// 서버에서 받아온 카페 데이터를 cafeList에 저장\r\n");
      out.write("		");
      if (_jspx_meth_c_005fforEach_005f1(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\r\n");
      out.write("		// 지도 중심을 부드럽게 이동시키는 함수\r\n");
      out.write("		function panTo(lat, lng) {\r\n");
      out.write("			var moveLatLon = new kakao.maps.LatLng(lat, lng);\r\n");
      out.write("			map.panTo(moveLatLon); // 지도 중심을 부드럽게 이동\r\n");
      out.write("		}\r\n");
      out.write("\r\n");
      out.write("		// 초기 마커 표시 및 검색 함수\r\n");
      out.write("		function displayCafes(cafes) {\r\n");
      out.write("			removeMarkers(); // 기존 마커 제거\r\n");
      out.write("\r\n");
      out.write("			var bounds = new kakao.maps.LatLngBounds();\r\n");
      out.write("\r\n");
      out.write("			for (var i = 0; i < cafes.length; i++) {\r\n");
      out.write("				var cafe = cafes[i];\r\n");
      out.write("				var position = new kakao.maps.LatLng(cafe.lat, cafe.lng);\r\n");
      out.write("\r\n");
      out.write("				var marker = new kakao.maps.Marker({\r\n");
      out.write("					map : map,\r\n");
      out.write("					position : position,\r\n");
      out.write("					image : markerImage\r\n");
      out.write("				});\r\n");
      out.write("\r\n");
      out.write("				markers.push(marker);\r\n");
      out.write("				bounds.extend(position);\r\n");
      out.write("\r\n");
      out.write("				// 마커 클릭 이벤트\r\n");
      out.write("				kakao.maps.event.addListener(marker, 'click', (function(cafe) {\r\n");
      out.write("					return function() {\r\n");
      out.write("						displayInfowindow(this, cafe);\r\n");
      out.write("						panTo(cafe.lat, cafe.lng); // 클릭한 마커로 지도 중심 이동\r\n");
      out.write("					};\r\n");
      out.write("				})(cafe));\r\n");
      out.write("			}\r\n");
      out.write("\r\n");
      out.write("			map.setBounds(bounds); // 모든 마커가 보이도록 지도 범위 재설정\r\n");
      out.write("		}\r\n");
      out.write("\r\n");
      out.write("		// 인포윈도우를 표시하는 함수\r\n");
      out.write("		function displayInfowindow(marker, cafe) {\r\n");
      out.write("			var content = '<div style=\"padding:5px;z-index:1;\">' + '<h5>'\r\n");
      out.write("					+ cafe.name + '</h5>' + '</div>';\r\n");
      out.write("\r\n");
      out.write("			infowindow.setContent(content);\r\n");
      out.write("			infowindow.open(map, marker);\r\n");
      out.write("		}\r\n");
      out.write("\r\n");
      out.write("		// 마커를 제거하는 함수\r\n");
      out.write("		function removeMarkers() {\r\n");
      out.write("			for (var i = 0; i < markers.length; i++) {\r\n");
      out.write("				markers[i].setMap(null);\r\n");
      out.write("			}\r\n");
      out.write("			markers = [];\r\n");
      out.write("		}\r\n");
      out.write("\r\n");
      out.write("		// 검색 결과 목록을 표시하는 함수\r\n");
      out.write("		function displayPlaces(cafes) {\r\n");
      out.write("			var listEl = document.getElementById('placesList'), fragment = document\r\n");
      out.write("					.createDocumentFragment();\r\n");
      out.write("\r\n");
      out.write("			removeAllChildNodes(listEl); // 기존 검색 결과 제거\r\n");
      out.write("\r\n");
      out.write("			for (var i = 0; i < cafes.length; i++) {\r\n");
      out.write("				var itemEl = getListItem(i, cafes[i]);\r\n");
      out.write("				fragment.appendChild(itemEl);\r\n");
      out.write("			}\r\n");
      out.write("\r\n");
      out.write("			listEl.appendChild(fragment);\r\n");
      out.write("		}\r\n");
      out.write("\r\n");
      out.write("		// 검색결과 항목을 Element로 반환하는 함수\r\n");
      out.write("		function getListItem(index, cafe) {\r\n");
      out.write("			var el = document.createElement('li'), itemStr = '<span class=\"markerbg marker_'\r\n");
      out.write("					+ (index + 1)\r\n");
      out.write("					+ '\"></span>'\r\n");
      out.write("					+ '<div class=\"info\">'\r\n");
      out.write("					+ '   <div class=\"info-title\">'\r\n");
      out.write("					+ '       <h5>'\r\n");
      out.write("					+ cafe.name\r\n");
      out.write("					+ '</h5>'\r\n");
      out.write("					+ '       <form method=\"POST\" action=\"/cafe/cafe/cafemap.do#cafeseat\">'\r\n");
      out.write("					+ '           <input type=\"hidden\" name=\"cseq\" value=\"' + cafe.cseq + '\">'\r\n");
      out.write("					+ '           <input onclick=\"reserveSeat('\r\n");
      out.write("					+ cafe.cseq\r\n");
      out.write("					+ ')\" type=\"submit\" class=\"btntitle\" value=\"예약\">'\r\n");
      out.write("					+ '       </form>'\r\n");
      out.write("					+ '   </div>'\r\n");
      out.write("					+ '   <span>'\r\n");
      out.write("					+ cafe.address\r\n");
      out.write("					+ '</span>'\r\n");
      out.write("					+ '   <span class=\"jibun gray\">'\r\n");
      out.write("					+ cafe.lotAddress\r\n");
      out.write("					+ '</span>'\r\n");
      out.write("					+ '   <span class=\"tel\">'\r\n");
      out.write("					+ cafe.tel + '</span>' + '</div>';\r\n");
      out.write("\r\n");
      out.write("			el.innerHTML = itemStr;\r\n");
      out.write("			el.className = 'item';\r\n");
      out.write("\r\n");
      out.write("			// 목록 항목 클릭 이벤트\r\n");
      out.write("			el.onclick = function() {\r\n");
      out.write("				displayInfowindow(markers[index], cafe);\r\n");
      out.write("				panTo(cafe.lat, cafe.lng); // 클릭한 항목으로 지도 중심 이동\r\n");
      out.write("			};\r\n");
      out.write("\r\n");
      out.write("			return el;\r\n");
      out.write("		}\r\n");
      out.write("\r\n");
      out.write("		// 검색결과 목록의 자식 Element를 제거하는 함수\r\n");
      out.write("		function removeAllChildNodes(el) {\r\n");
      out.write("			while (el.hasChildNodes()) {\r\n");
      out.write("				el.removeChild(el.lastChild);\r\n");
      out.write("			}\r\n");
      out.write("		}\r\n");
      out.write("\r\n");
      out.write("		// 검색 기능\r\n");
      out.write("		document.getElementById('search-btn').addEventListener(\r\n");
      out.write("				'click',\r\n");
      out.write("				function(e) {\r\n");
      out.write("					e.preventDefault();\r\n");
      out.write("					var cseq = document.getElementById('cseq').value\r\n");
      out.write("							.toLowerCase();\r\n");
      out.write("					var filteredCafes = cafeList\r\n");
      out.write("							.filter(function(cafe) {\r\n");
      out.write("								return cafe.name.toLowerCase()\r\n");
      out.write("										.includes(cseq)\r\n");
      out.write("										|| cafe.address.toLowerCase().includes(\r\n");
      out.write("												cseq);\r\n");
      out.write("							});\r\n");
      out.write("					displayCafes(filteredCafes);\r\n");
      out.write("					displayPlaces(filteredCafes); // 검색 결과 목록 표시 추가\r\n");
      out.write("				});\r\n");
      out.write("\r\n");
      out.write("		// 페이지 로드 시 모든 카페 표시\r\n");
      out.write("		window.onload = function() {\r\n");
      out.write("			displayCafes(cafeList);\r\n");
      out.write("			displayPlaces(cafeList); // 초기 목록 표시 추가\r\n");
      out.write("		};\r\n");
      out.write("	</script>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fif_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f0 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f0_reused = false;
    try {
      _jspx_th_c_005fif_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f0.setParent(null);
      // /WEB-INF/views/inc/nav.jsp(18,2) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${empty auth}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f0 = _jspx_th_c_005fif_005f0.doStartTag();
      if (_jspx_eval_c_005fif_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("			<a href=\"/cafe/user/login.do\" class=\"icon solid fa-user\"><span>Login</span></a>\r\n");
          out.write("		");
          int evalDoAfterBody = _jspx_th_c_005fif_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
      _jspx_th_c_005fif_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f1 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f1_reused = false;
    try {
      _jspx_th_c_005fif_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f1.setParent(null);
      // /WEB-INF/views/inc/nav.jsp(23,2) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f1.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${not empty auth}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f1 = _jspx_th_c_005fif_005f1.doStartTag();
      if (_jspx_eval_c_005fif_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("			<a href=\"/cafe/user/logout.do\" class=\"icon solid fa-user\"><span>Logout</span></a>\r\n");
          out.write("		");
          int evalDoAfterBody = _jspx_th_c_005fif_005f1.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f1);
      _jspx_th_c_005fif_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fforEach_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f0 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    boolean _jspx_th_c_005fforEach_005f0_reused = false;
    try {
      _jspx_th_c_005fforEach_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f0.setParent(null);
      // /WEB-INF/views/cafe/cafemap.jsp(64,7) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setItems(new org.apache.jasper.el.JspValueExpression("/WEB-INF/views/cafe/cafemap.jsp(64,7) '${list}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${list}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      // /WEB-INF/views/cafe/cafemap.jsp(64,7) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setVar("dto");
      int[] _jspx_push_body_count_c_005fforEach_005f0 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f0 = _jspx_th_c_005fforEach_005f0.doStartTag();
        if (_jspx_eval_c_005fforEach_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n");
            out.write("								<li class=item><span class=\"markerbg marker_");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${dto.cseq}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\"></span>\r\n");
            out.write("									<div class=\"info\">\r\n");
            out.write("\r\n");
            out.write("										<div class=\"info-title\">\r\n");
            out.write("											<h5>");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${dto.name}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</h5>\r\n");
            out.write("											<form method=\"POST\" action=\"/cafe/cafe/cafemap.do#cafeseat\">\r\n");
            out.write("												<input type=\"hidden\" id=\"cseq\" name=\"cseq\"\r\n");
            out.write("													value=\"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${dto.cseq}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\"> <input type=\"submit\"\r\n");
            out.write("													class=\"btntitle\" value=\"예약\">\r\n");
            out.write("											</form>\r\n");
            out.write("										</div>\r\n");
            out.write("\r\n");
            out.write("\r\n");
            out.write("										\r\n");
            out.write("										기존에 카페 선택 페이지에서 좌석 선택 페이지로 갈 때 \r\n");
            out.write("										GET방식으로 카페 번호를 query string에 입력해서 보내 줬는데,\r\n");
            out.write("										이걸 세션으로 넘겨주는 방식으로 수정. 이에 맞게 예약 버튼을 누르면\r\n");
            out.write("										본인 페이지로 한 번 더 카페 정보를 가지고 서블릿으로 이동하고\r\n");
            out.write("										서블릿은 해당 정보를 세션에 입력하고 알맞은 카페로 이동 시켜줌\r\n");
            out.write(" 										<div class=\"info-title\">\r\n");
            out.write("											<h5>");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${dto.name}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</h5>\r\n");
            out.write("											<input type=\"submit\" id=\"btntitle");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${dto.cseq}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\"\r\n");
            out.write("												class=\"btntitle\" value=\"예약\" data-value=\"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${dto.cseq}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\">\r\n");
            out.write("										</div> \r\n");
            out.write("										\r\n");
            out.write("\r\n");
            out.write("										<span>");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${dto.address}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</span> <span class=\"jibun gray\">");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${dto.lotAddress}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</span>\r\n");
            out.write("										<span class=\"tel\">");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${dto.tel}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</span>\r\n");
            out.write("									</div></li>\r\n");
            out.write("\r\n");
            out.write("							");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f0.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f0[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f0.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f0.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f0);
      _jspx_th_c_005fforEach_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fforEach_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f1 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    boolean _jspx_th_c_005fforEach_005f1_reused = false;
    try {
      _jspx_th_c_005fforEach_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f1.setParent(null);
      // /WEB-INF/views/cafe/cafemap.jsp(156,2) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f1.setItems(new org.apache.jasper.el.JspValueExpression("/WEB-INF/views/cafe/cafemap.jsp(156,2) '${list}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${list}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      // /WEB-INF/views/cafe/cafemap.jsp(156,2) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f1.setVar("dto");
      int[] _jspx_push_body_count_c_005fforEach_005f1 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f1 = _jspx_th_c_005fforEach_005f1.doStartTag();
        if (_jspx_eval_c_005fforEach_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n");
            out.write("		cafeList.push({\r\n");
            out.write("			name : \"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${dto.name}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\",\r\n");
            out.write("			lat : \"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${dto.lat}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\",\r\n");
            out.write("			lng : \"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${dto.lng}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\",\r\n");
            out.write("			address : \"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${dto.address}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\",\r\n");
            out.write("			lotAddress : \"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${dto.lotAddress}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\",\r\n");
            out.write("			tel : \"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${dto.tel}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\",\r\n");
            out.write("			cseq : \"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${dto.cseq}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\"\r\n");
            out.write("		});\r\n");
            out.write("		");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f1.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f1[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f1.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f1.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f1);
      _jspx_th_c_005fforEach_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f1_reused);
    }
    return false;
  }
}
